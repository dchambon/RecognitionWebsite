@model CentricProjectTeam4.Models.RegisteredUser

@{
    ViewBag.Title = "Edit Profile";
}

@{
    var pageTitle = "Edit " + Model.firstName + " " + Model.lastName + "'s Profile";
}

<style>
    .panel-default {
        background-color: #f5b843;
        color: #FFF;
        border-color: #f5b843;
    }

    .btn-default {
        background-color: #3e305b;
        color: #FFF;
        border-color: #3e305b;
    }

        .btn-default:hover, .btn-default:focus, .btn-default:active, .btn-default.active, .open .dropdown-toggle.btn-default {
            background-color: #FFF;
            color: #f5b843;
            border-color: #FFF;
        }
</style>

<div>
    <br />
</div>

<div class="panel panel-default">
    <center>
        <h3>
            <strong>
                @{
                    @Html.Label("Page Title", pageTitle);
                }
            </strong>
        </h3>
    </center>
</div>

@{
    if (ViewBag.Errormsg != null)
    {
        <div class="alert alert-danger">
            <h4>ViewBag.Errormsg.ToString()</h4>
            <br />
        </div>
    }
}

<div class="row">
    <div class="col-sm-10">
        <p></p>
    </div>
    <div class="col-sm-2">
        <a href="~/RegisteredUsers/" class="btn btn-default" role="button">Back to profiles list</a>
    </div>
</div>

@using (Html.BeginForm("Edit", "RegisteredUsers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.registeredUserID)

        <div class="form-group">
            <div class="col-md-3">
                <p></p>
            </div>
            @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <p></p>
            </div>
            @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <p></p>
            </div>
            @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-3">
                <p></p>
            </div>
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EnumDropDownListFor(model => model.location, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <p></p>
            </div>
            @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EnumDropDownListFor(model => model.role, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <p></p>
            </div>
            @Html.LabelFor(model => model.hireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.hireDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <p></p>
            </div>
            @Html.LabelFor(model => model.profilePic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                <img src="@Url.Content("~/Uploads/")@Model.profilePic" height="200" />
                @*@Html.EditorFor(model => model.profilePic, new { htmlAttributes = new { @class = "form-control" } })*@
                <br />
                <input id="UploadedImage" type="file" name="UploadedImage" />
                @Html.ValidationMessageFor(model => model.profilePic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-7">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

